---
# Create an instance on NeCTAR
- name: Create an instance
  os_server:
    name: '{{ item.name }}'
    image: '{{ instance_image }}'
    key_name: '{{ instance_key_name }}'
    flavor: '{{ instance_flavor }}'
    availability_zone: '{{ availability_zone }}'
    network: qh2-uom-internal
    security_groups: '{{ sg_names }}'
    volumes: '{{ item.volumes }}'
    auto_floating_ip: yes
    wait: yes
    timeout: 600
    state: present
  loop: '{{ instances }}'
  register: os_instance

- debug:
    msg: "Instance {{ item.openstack.name }} has been created. IP address is {{ item.openstack.public_v4 }}"
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

- name: Wait for connection
  wait_for:
    host: "{{ item.openstack.public_v4 }}"
    port: 22
    timeout: 120
    search_regex: OpenSSH
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

# Add hosts to Ansible in-memory inventory
- name: Add host
  add_host:
    name: '{{ item.openstack.public_v4 }}'
    groups: COMP90024
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

- name: set ip address to fact
  set_fact:
    ip_addresses: "{{ ip_addresses|default([]) + [ {'name': item.item.name, 'ip': item.openstack.public_v4} ] }}"
  when: item.openstack is defined
  loop: '{{ os_instance.results }}'

# - name: Create inventory file
#   copy:
#     content: "[all:vars]\nansible_user=ubuntu\nansible_python_interpreter=/usr/bin/python3\nansible_ssh_private_key_file=~/.ssh/group55-key.pem\nansible_ssh_common_args='-o StrictHostKeyChecking=no'\n\n[dbServers:children]\ndbMaster\ndbSlave\n\n[dbMaster:children]\ninstance1\n\n[dbSlave:children]\ninstance2\ninstance3\n\n"
#     dest: "{{project_working_directory}}/inventory/hosts.ini"

# - name: set ip addresses to inventory file
#   lineinfile:
#     line: "[{{ item.name }}]\n{{ item.ip }}\n"
#     dest: "{{project_working_directory}}/inventory/hosts.ini"
#   loop: '{{ ip_addresses }}'

